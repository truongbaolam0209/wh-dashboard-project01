{"version":3,"sources":["assets/constant.js","utils/function.js","components/ChartBarDrawing.jsx","components/ui/ButtonCapsule.jsx","components/ui/CardPanel.jsx","components/ChartBarProject.jsx","components/ChartPieDrawing.jsx","components/ChartProgress.jsx","components/FormPivot.jsx","components/NavBar.jsx","components/ui/Container.jsx","layouts/PageDashboard.jsx","layouts/PageLogin.jsx","App.js","index.js"],"names":["colorScheme","pieChartColors","sizeScheme","dataScheme","name","year","delayConstruction","delayApproval","productivity","getColumnsIndexAndDrawings","project","categoryArray","_","map","columns","columnsIndexArray","forEach","cate","cl","title","index","allDrawings","rows","drawing","undefined","cells","value","push","countAllSameData","category","statusCount","dwg","ChartBarDrawing","props","deviceWidth","chartWidth","countAllRev","filter","rev","style","margin","display","width","height","data","top","right","left","bottom","padding","barSize","dataKey","textAnchor","angle","interval","scale","strokeDasharray","fill","background","position","ButtonCapsule","btnname","color","Container","styled","div","CardPanel","children","headColor","headTitleColor","boxShadow","border","paddingBottom","marginBottom","borderRadius","overflow","bodyStyle","headStyle","backgroundColor","lineHeight","ChartBarProject","useEffect","timer","setTimeout","setData","sortBy","e","setLoading","clearTimeout","useState","loading","btnActive","setBtnActive","chartScheme","chartType","chartColor","chartData","labelListType","includes","xs","span","lg","onClick","event","dt","target","textContent","ChartPieDrawing","countAllStatus","modalShown","setModalShown","portionClick","setPortionClick","drawingByPortions","setDrawingByPortions","drawingStatusTableOnClose","cx","cy","labelLine","label","renderCustomizedLabel","outerRadius","portion","dwgs","cursor","entry","key","length","item","StyledBadge","size","indexOf","text","centered","visible","onOk","onCancel","Math","round","percent","Badge","midAngle","innerRadius","radius","x","cos","PI","y","sin","dominantBaseline","toFixed","ChartProgress","countAllDrawingsUnique","overdueDummy","trailColor","strokeColor","FormPivot","columnsInDateFormat","pivotArray","setPivotArray","titleLeft","setTitleLeft","setValue","selected","setSelected","modalFormatVisible","setModalFormatVisible","modalDetailTableVisible","setModalDetailTableVisible","selectFormat","formatType","onResetHandle","onCloseModalDetail","marginTop","disabled","showSearch","placeholder","optionFilterProp","onChange","filterOption","input","option","toLowerCase","Option","footer","NavBar","Header","zIndex","paddingTop","float","transform","src","paddingRight","fontSize","textAlign","icon","window","innerWidth","type","MessageOutlined","marginRight","DownCircleOutlined","justify","TitleInfo","titleInfo","fontWeight","SkeletonCard","PageDashboard","setDeviceWidth","addEventListener","removeEventListener","axios","post","listSheetId","then","res","reverse","id","xl","PageLogin","className","labelCol","wrapperCol","onFinish","Item","alt","rules","required","message","prefix","UserOutlined","autoComplete","min","Password","LockOutlined","iconRender","offset","htmlType","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d409a936.chunk.js","sourcesContent":["\r\n\r\n\r\nexport const colorScheme = {\r\n    yellow: '#f9ca24',\r\n    dark: '#1e272e',\r\n    grey0: '#ecf0f1',\r\n    grey: '#bdc3c7',\r\n    grey2: '#636e72',\r\n    red: '#ff3f34',\r\n    green: '#05c46b',\r\n    blue: '#0984e3'\r\n};\r\n\r\nexport const pieChartColors = [\r\n    '#f9ca24',\r\n    '#05c46b',\r\n    '#ff3f34',\r\n    '#0984e3',\r\n    '#636e72'\r\n];\r\n\r\nexport const sizeScheme = {\r\n    xs: 576,\r\n    lg: 992,\r\n    xl: 1200\r\n};\r\n\r\n\r\nexport const dataScheme = {\r\n    projectsDummy: [\r\n        { name: 'Sumang', year: 2012, delayConstruction: 998, delayApproval: 550, productivity: 0.75 },\r\n        { name: 'Garden', year: 2013, delayConstruction: 1170, delayApproval: 600, productivity: 0.55 },\r\n        { name: 'Jokoon', year: 2014, delayConstruction: 500, delayApproval: 750, productivity: 0.4 },\r\n        { name: 'Kembangan', year: 2015, delayConstruction: 650, delayApproval: 900, productivity: 0.6 },\r\n        { name: 'KCDE', year: 2016, delayConstruction: 800, delayApproval: 590, productivity: 0.75 },\r\n        { name: 'Handy', year: 2017, delayConstruction: 750, delayApproval: 350, productivity: 0.85 },\r\n        { name: 'Funan', year: 2018, delayConstruction: 300, delayApproval: 305, productivity: 0.7 },\r\n        { name: 'Gul Circle', year: 2019, delayConstruction: 400, delayApproval: 415, productivity: 0.1 },\r\n        { name: 'Changi T5', year: 2020, delayConstruction: 680, delayApproval: 435, productivity: 0.4 },\r\n        { name: 'Dleedon', year: 2021, delayConstruction: 800, delayApproval: 395, productivity: 0.75 },\r\n    ],\r\n    overdueDummy: [\r\n        { name: 'Late for construction 1/51', value: 5 },\r\n        { name: 'Overdue date of submissions 49/51', value: 90 },\r\n        { name: 'Overdue date of approval 35/51', value: 76 }\r\n    ],\r\n    revisionCounts: [\r\n        { name: 'Rev 0', nos: 350 },\r\n        { name: 'Rev A', nos: 211 },\r\n        { name: 'Rev B', nos: 256 },\r\n        { name: 'Rev C', nos: 58 },\r\n        { name: 'Rev D', nos: 42 }\r\n    ]\r\n};","import _ from 'lodash';\r\n\r\n\r\nexport const getColumnsIndexAndDrawings = (project) => {\r\n    const categoryArray = _.map(project.columns, 'title');\r\n    let columnsIndexArray = {};\r\n    categoryArray.forEach(cate => {\r\n        project.columns.forEach(cl => {\r\n            if (cl.title === cate) columnsIndexArray[cate] = cl.index;\r\n        });\r\n    });\r\n\r\n    let allDrawings = [];\r\n    project.rows.forEach(drawing => {\r\n        if (drawing.cells[columnsIndexArray['Status']].value !== undefined) {\r\n            allDrawings.push(drawing);\r\n        };\r\n    });\r\n    return { columnsIndexArray, allDrawings };\r\n};\r\n\r\n\r\n\r\nexport const countAllSameData = (project, category) => {\r\n\r\n    const { allDrawings, columnsIndexArray } = getColumnsIndexAndDrawings(project);\r\n\r\n    let statusCount = {};\r\n    allDrawings.forEach(dwg => {\r\n        statusCount[dwg.cells[columnsIndexArray[category]].value] = (statusCount[dwg.cells[columnsIndexArray[category]].value] || 0) + 1;\r\n    });\r\n    return _.map(statusCount, (value, name) => ({ name, value }));\r\n};\r\n\r\n","import React from 'react';\r\nimport { Bar, BarChart, CartesianGrid, LabelList, Tooltip, XAxis, YAxis } from 'recharts';\r\nimport { colorScheme, sizeScheme } from '../assets/constant';\r\nimport { countAllSameData } from '../utils/function';\r\n\r\n\r\nconst ChartBarDrawing = props => {\r\n\r\n\r\n    const { deviceWidth, project } = props;\r\n    const chartWidth = deviceWidth < sizeScheme.lg ? deviceWidth - 40 : 300;\r\n\r\n\r\n    const countAllRev = countAllSameData(project, 'Rev').filter(rev => rev.name !== 'undefined' && rev.name !== '-');\r\n\r\n\r\n    return (\r\n        <div style={{ margin: '0 auto', display: 'table' }}>\r\n            <BarChart\r\n                width={chartWidth}\r\n                height={350}\r\n                data={countAllRev}\r\n                margin={{ top: 35, right: 30, left: 0, bottom: 20 }}\r\n                padding={{ top: 10 }}\r\n                barSize={20}\r\n            >\r\n                <XAxis dataKey='name' textAnchor='end' angle={-45} interval={0} scale='point' padding={{ left: 15, right: 10 }} />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <CartesianGrid strokeDasharray='3 3' />\r\n                <Bar\r\n                    dataKey='value'\r\n                    fill={colorScheme.grey2}\r\n                    background={{ fill: colorScheme.grey0 }}\r\n                >\r\n                    <LabelList dataKey='value' position='top' />\r\n                </Bar>\r\n\r\n            </BarChart>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default ChartBarDrawing;\r\n\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ButtonCapsule = props => {\r\n    const { btnname, color } = props;\r\n\r\n    return (\r\n        <Container {...props} color={color} >\r\n            {btnname}\r\n        </Container >\r\n    );\r\n};\r\n\r\nexport default ButtonCapsule;\r\n\r\n// const Container = styled(Button)`\r\nconst Container = styled.div`\r\n    &:hover {\r\n        cursor: pointer;\r\n        background: #bdc3c7;\r\n    }\r\n    transition: 0.3s;\r\n    line-height: 13px;\r\n    font-size: 12px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 3px;\r\n    padding: 5px;\r\n    border: 1px solid;\r\n    border-radius: 500px;\r\n    border-color: ${props => props.color};\r\n    background: ${props => props.color};\r\n    \r\n`;\r\n","import { Card } from 'antd';\r\nimport React from 'react';\r\n\r\nconst CardPanel = ({ children, title, headColor, headTitleColor }) => {\r\n\r\n\r\n\r\n    return (\r\n        <Card\r\n            title={title}\r\n            style={{\r\n                margin: 0, boxShadow: '5px 15px 24px 5px #d2dae2',\r\n                border: 'none',\r\n                paddingBottom: 20,\r\n                marginBottom: 20,\r\n                borderRadius: 20, overflow: 'hidden',\r\n            }}\r\n            bodyStyle={{\r\n                margin: 'auto',\r\n                padding: 0,\r\n            }}\r\n            headStyle={{\r\n                backgroundColor: headColor,\r\n                color: headTitleColor,\r\n                lineHeight: '15px'\r\n            }}\r\n        >\r\n            {children}\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default CardPanel;\r\n","import { Col, Skeleton } from 'antd';\r\nimport _ from 'lodash';\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport { Bar, BarChart, CartesianGrid, LabelList, Tooltip, XAxis, YAxis } from 'recharts';\r\nimport { colorScheme, dataScheme, sizeScheme } from '../assets/constant';\r\nimport ButtonCapsule from './ui/ButtonCapsule';\r\nimport CardPanel from './ui/CardPanel';\r\n\r\n\r\n\r\nconst ChartBarProject = props => {\r\n\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            setData(_.sortBy(dataScheme.projectsDummy, e => e.year));\r\n            setLoading(false);\r\n        }, 600);\r\n        return () => clearTimeout(timer);\r\n    }, []);\r\n\r\n    const { deviceWidth, title } = props;\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [btnActive, setBtnActive] = useState(null);\r\n\r\n    const chartWidth = deviceWidth <= sizeScheme.lg ? deviceWidth - 50 : (deviceWidth - 80) / 3;\r\n\r\n    const chartScheme = {\r\n        chartType: title === 'Productivity' ? 'productivity' : title === 'No of drawing delay (for construction)' ? 'construction' : 'approval',\r\n        chartColor: title === 'Productivity' ? colorScheme.yellow : title === 'No of drawing delay (for construction)' ? colorScheme.red : colorScheme.green,\r\n        chartData: title === 'Productivity' ? 'productivity' : title === 'No of drawing delay (for construction)' ? 'delayConstruction' : 'delayApproval',\r\n    };\r\n\r\n\r\n    const labelListType = btnActive !== null && btnActive.includes('productivity') ? 'productivity'\r\n        : btnActive !== null && btnActive.includes('approval') ? 'delayApproval'\r\n            : btnActive !== null && btnActive.includes('construction') ? 'delayConstruction' : 'year';\r\n\r\n\r\n    return (\r\n        <Col style={{ padding: '0 15px' }} xs={{ span: 24 }} lg={{ span: 8 }}>\r\n            <CardPanel title={title} headColor={chartScheme.chartColor}>\r\n\r\n                {loading\r\n                    ? <div style={{ padding: '20px', marginBottom: '82px' }}><Skeleton /><Skeleton /></div>\r\n                    : (\r\n                        <Fragment>\r\n                            <div style={{ padding: '10px 0 0 10px' }}>\r\n                                <div style={{ display: 'flex' }}>\r\n                                    <ButtonCapsule\r\n                                        btnname='Ascending year'\r\n                                        onClick={event => {\r\n                                            setData(_.sortBy(data, dt => dt.year));\r\n                                            setBtnActive(event.target.textContent);\r\n                                        }}\r\n                                        color={btnActive === 'Ascending year' ? chartScheme.chartColor : colorScheme.grey0}\r\n                                    />\r\n                                    <ButtonCapsule\r\n                                        btnname='Descending year'\r\n                                        onClick={event => {\r\n                                            setData(_.sortBy(data, e => -e.year));\r\n                                            setBtnActive(event.target.textContent);\r\n                                        }}\r\n                                        color={btnActive === 'Descending year' ? chartScheme.chartColor : colorScheme.grey0}\r\n                                    />\r\n                                </div>\r\n                                <div style={{ display: 'flex' }}>\r\n                                    <ButtonCapsule\r\n                                        btnname={'Ascending ' + chartScheme.chartType}\r\n                                        onClick={event => {\r\n                                            setData(_.sortBy(data, e => e[chartScheme.chartData]));\r\n                                            setBtnActive(event.target.textContent);\r\n                                        }}\r\n                                        color={btnActive === 'Ascending ' + chartScheme.chartType ? chartScheme.chartColor : colorScheme.grey0}\r\n                                    />\r\n                                    <ButtonCapsule\r\n                                        btnname={'Descending ' + chartScheme.chartType}\r\n                                        onClick={event => {\r\n                                            setData(_.sortBy(data, e => -e[chartScheme.chartData]));\r\n                                            setBtnActive(event.target.textContent);\r\n                                        }}\r\n                                        color={btnActive === 'Descending ' + chartScheme.chartType ? chartScheme.chartColor : colorScheme.grey0}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <BarChart\r\n                                width={chartWidth}\r\n                                height={350}\r\n                                data={data}\r\n                                margin={{ top: 35, right: 30, left: 0, bottom: 80 }}\r\n                                padding={{ top: 10 }}\r\n                                barSize={20}\r\n                            >\r\n                                <XAxis dataKey='name' textAnchor='end' angle={-45} interval={0} scale='point' padding={{ left: 15, right: 10 }} />\r\n                                <YAxis />\r\n                                <Tooltip />\r\n                                <CartesianGrid strokeDasharray='3 3' />\r\n                                <Bar\r\n                                    dataKey={chartScheme.chartData}\r\n                                    fill={chartScheme.chartColor}\r\n                                    background={{ fill: '#eee' }}\r\n                                >\r\n                                    <LabelList dataKey={labelListType} position='top' />\r\n                                </Bar>\r\n                            </BarChart>\r\n\r\n                        </Fragment>\r\n                    )}\r\n            </CardPanel>\r\n        </Col>\r\n    );\r\n};\r\n\r\nexport default ChartBarProject;\r\n","import { Badge, Modal, Tooltip } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport { Cell, Pie, PieChart } from 'recharts';\r\nimport styled from 'styled-components';\r\nimport { pieChartColors } from '../assets/constant';\r\nimport { countAllSameData, getColumnsIndexAndDrawings } from '../utils/function';\r\n\r\n\r\n\r\nconst ChartPieDrawing = props => {\r\n\r\n    const { project } = props;\r\n\r\n    let { columnsIndexArray, allDrawings } = getColumnsIndexAndDrawings(project);\r\n\r\n    const countAllStatus = countAllSameData(project, 'Status');\r\n\r\n\r\n\r\n    const [modalShown, setModalShown] = useState(false);\r\n    const [portionClick, setPortionClick] = useState(false);\r\n    const [drawingByPortions, setDrawingByPortions] = useState([]);\r\n\r\n\r\n    const drawingStatusTableOnClose = () => {\r\n        setModalShown(false);\r\n        setDrawingByPortions([]);\r\n    };\r\n\r\n    const drawingStatusTableOnOpen = (portion) => {\r\n        setModalShown(true);\r\n        setPortionClick(portion);\r\n\r\n        let dwgs = [];\r\n        allDrawings.forEach(dwg => {\r\n            if (dwg.cells[columnsIndexArray['Status']].value === portion.name) {\r\n                dwgs.push(dwg);\r\n            };\r\n        });\r\n        setDrawingByPortions(dwgs);\r\n    };\r\n\r\n\r\n    // DRAWINGS BY PERCENTAGE HERE\r\n    // console.log(drawingByPortions);\r\n\r\n    return (\r\n        <div>\r\n            <PieChart width={300} height={300} style={{ margin: '0 auto' }}>\r\n                <Pie\r\n                    data={countAllStatus}\r\n                    cx={150}\r\n                    cy={150}\r\n                    labelLine={false}\r\n                    label={renderCustomizedLabel}\r\n                    dataKey='value'\r\n                    outerRadius={100}\r\n                    onClick={drawingStatusTableOnOpen}\r\n                    cursor='pointer'\r\n                >\r\n                    {countAllStatus.map((entry, index) => (\r\n                        <Cell\r\n                            key={`cell-${index}`}\r\n                            fill={pieChartColors[index % pieChartColors.length]}\r\n                        />\r\n                    ))}\r\n                </Pie>\r\n                <Tooltip />\r\n            </PieChart>\r\n\r\n            <div style={{ margin: '0 auto', display: 'table' }}>\r\n                {countAllStatus.map(item => (\r\n                    <div key={item.name}>\r\n                        <StyledBadge size='small' color={pieChartColors[countAllStatus.indexOf(item)]} text={item.name} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <Modal\r\n                title={'Drawings by ' + portionClick.name}\r\n                centered\r\n                visible={modalShown}\r\n                onOk={drawingStatusTableOnClose}\r\n                onCancel={drawingStatusTableOnClose}\r\n            >\r\n                <p>{portionClick.name}</p>\r\n                <p>{drawingByPortions.length}</p>\r\n                <h2>{Math.round(portionClick.percent * 100) + '%'}</h2>\r\n                {/* SORTED TABLE SHOWN HERE */}\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChartPieDrawing;\r\n\r\n\r\nconst StyledBadge = styled(Badge)`\r\n    .ant-badge-status-dot {\r\n        width: 15px;\r\n        height: 15px;\r\n        border-radius: 0;\r\n    }\r\n`;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent }) => {\r\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n    const x = cx + radius * Math.cos(-midAngle * Math.PI / 180);\r\n    const y = cy + radius * Math.sin(-midAngle * Math.PI / 180);\r\n\r\n    return (\r\n        <text x={x} y={y} fill='white' textAnchor={x > cx ? 'start' : 'end'} dominantBaseline='central'>\r\n            {`${(percent * 100).toFixed(0)}%`}\r\n        </text>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n","import { Progress } from 'antd';\r\nimport React, { Fragment } from 'react';\r\nimport { colorScheme } from '../assets/constant';\r\nimport { countAllSameData } from '../utils/function';\r\n\r\n\r\nconst ChartProgress = ({ project }) => {\r\n\r\n    const countAllDrawingsUnique = countAllSameData(project, 'Drawing Number');\r\n    \r\n    const overdueDummy = [\r\n        { name: `Late for construction 1/${countAllDrawingsUnique.length}`, value: 5 },\r\n        { name: `Overdue date of submissions 49/${countAllDrawingsUnique.length}`, value: 90 },\r\n        { name: `Overdue date of approval 35/${countAllDrawingsUnique.length}`, value: 76 }\r\n    ];\r\n\r\n    return (\r\n        <div style={{ width: '80%', margin: '25px auto' }}>\r\n            {overdueDummy.map(item => (\r\n                <Fragment key={item.name}>\r\n                    <div>{item.name}</div>\r\n                    <Progress\r\n                        trailColor='#eee'\r\n                        strokeColor={colorScheme.grey2}\r\n                        percent={item.value}\r\n                        style={{ paddingBottom: 29 }}\r\n                    />\r\n                </Fragment>\r\n            ))}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChartProgress;\r\n","import { Button, Modal, Select } from 'antd';\r\nimport _ from 'lodash';\r\nimport React, { useState } from 'react';\r\nimport { colorScheme } from '../assets/constant';\r\nimport ButtonCapsule from './ui/ButtonCapsule';\r\n\r\n\r\n\r\nconst FormPivot = props => {\r\n\r\n    const { project } = props;\r\n\r\n\r\n    const columnsInDateFormat = [\r\n        'Model Start(T)',\r\n        'Model Start(A)',\r\n        'Model Finish (T)',\r\n        'Model Finish (A)',\r\n        'Drawing Start (T)',\r\n        'Drawing Finish (T)',\r\n        'Drawing Start (A)',\r\n        'Drawing Finish (A)',\r\n        'Drg to Consultant (T)',\r\n        'Drg to Consultant (A)',\r\n        'get Approval (T)',\r\n        'get Approval (A)',\r\n    ];\r\n\r\n\r\n    const [pivotArray, setPivotArray] = useState([]);\r\n    const [titleLeft, setTitleLeft] = useState(_.map(project.columns, 'title'));\r\n    const [value, setValue] = useState('Select an option...');\r\n    const [selected, setSelected] = useState(null);\r\n    const [modalFormatVisible, setModalFormatVisible] = useState(false);\r\n    const [modalDetailTableVisible, setModalDetailTableVisible] = useState(false);\r\n\r\n\r\n    const onChange = value => {\r\n        setValue('Select an option...');\r\n\r\n        setSelected(value);\r\n        if (columnsInDateFormat.includes(value)) {\r\n            setModalFormatVisible(true);\r\n        } else {\r\n            setTitleLeft(titleLeft.filter(title => title !== value));\r\n            setPivotArray([...pivotArray, value]);\r\n        };\r\n    };\r\n\r\n\r\n    const selectFormat = (e) => {\r\n        const formatType = e.target.textContent;\r\n        setTitleLeft(titleLeft.filter(title => title !== selected));\r\n        setPivotArray([...pivotArray, selected + ' - ' + formatType]);\r\n        setModalFormatVisible(false);\r\n    };\r\n\r\n    const onCloseModalType = () => {\r\n        setModalFormatVisible(false);\r\n    };\r\n\r\n\r\n    const onResetHandle = () => {\r\n        setPivotArray([]);\r\n        setTitleLeft(_.map(project.columns, 'title'));\r\n    };\r\n\r\n    const onCloseModalDetail = () => {\r\n        onResetHandle();\r\n        setModalDetailTableVisible(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <div style={{ marginTop: '10px', padding: '20px' }}>\r\n            {pivotArray.map(cl => (\r\n                <div key={cl}>\r\n                    <Button disabled={true} style={{ width: '100%', margin: '10px auto', display: 'table' }}>{cl}</Button>\r\n                </div>\r\n            ))}\r\n\r\n            <Select\r\n                value={value}\r\n                showSearch\r\n                style={{ width: '100%', margin: '0 auto', display: 'table' }}\r\n                placeholder='Select a title'\r\n                optionFilterProp='children'\r\n                onChange={onChange}\r\n                filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n            >\r\n                {titleLeft.map(cl => (\r\n                    <Select.Option value={cl} key={cl}>{cl}</Select.Option>\r\n                ))}\r\n            </Select>\r\n            <div style={{ display: 'flex' }}>\r\n                <Button\r\n                    style={{ background: colorScheme.grey0, width: '90%', margin: '10px auto' }}\r\n                    onClick={() => setModalDetailTableVisible(true)}\r\n                >\r\n                    Go to sorted table\r\n                </Button>\r\n                <Button\r\n                    style={{ background: colorScheme.grey2, width: '90%', margin: '10px auto' }}\r\n                    onClick={onResetHandle}\r\n                >\r\n                    Reset\r\n                    </Button>\r\n            </div>\r\n\r\n\r\n\r\n            <Modal\r\n                title='Select the format'\r\n                visible={modalFormatVisible}\r\n                onCancel={onCloseModalType}\r\n                footer={null}\r\n            >\r\n                <ButtonCapsule btnname='Week' onClick={selectFormat} />\r\n                <ButtonCapsule btnname='Month' onClick={selectFormat} />\r\n                <ButtonCapsule btnname='Year' onClick={selectFormat} />\r\n            </Modal>\r\n\r\n\r\n            <Modal\r\n                title='Sorted table'\r\n                centered\r\n                visible={modalDetailTableVisible}\r\n                onOk={onCloseModalDetail}\r\n                onCancel={onCloseModalDetail}\r\n            >\r\n                {/* SORTED TABLE SHOWN HERE */}\r\n            </Modal>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FormPivot;\r\n","import { DownCircleOutlined, MessageOutlined } from '@ant-design/icons';\r\nimport { Avatar, BackTop, Divider, Icon, Layout, Row } from 'antd';\r\nimport React from 'react';\r\nimport { colorScheme, sizeScheme } from '../assets/constant';\r\n\r\n\r\nconst NavBar = props => {\r\n\r\n    const { children } = props;\r\n\r\n\r\n    return (\r\n        <Layout>\r\n            <Layout.Header style={{ position: 'fixed', zIndex: 1, width: '100%', padding: '0 10px', height: 55 }}>\r\n                <div style={{ paddingTop: 5 }}>\r\n\r\n\r\n                    <Row style={{ float: 'left', }}>\r\n                        <img style={{ transform: 'translateY(-10px) translateX(-5px)' }} width={150} src='./img/logo3.png' />\r\n                    </Row>\r\n\r\n\r\n                    <Row style={{ float: 'right' }}>\r\n                        <div style={{ display: 'flex' }}>\r\n                            <div style={{ color: 'white', paddingRight: 15 }}>\r\n                                <div style={{ lineHeight: '22px', fontSize: 17, textAlign: 'right' }}>Jonas Shelomoh</div>\r\n                                <div style={{ lineHeight: '20px', fontSize: 13, textAlign: 'right' }}>Project Director</div>\r\n                            </div>\r\n                            <Avatar size={40} icon='user' />\r\n                            {window.innerWidth <= sizeScheme.xs ? '' : (\r\n                                <>\r\n                                    <Divider type='vertical' style={{ backgroundColor: '#f9ca24', height: 40, width: 1, margin: '0 15px' }} />\r\n                                    <MessageOutlined style={{ color: '#f9ca24', fontSize: 40, marginRight: 10 }} />\r\n                                    <DownCircleOutlined style={{ color: '#f9ca24', fontSize: 40, marginRight: 10 }} />\r\n                                </>\r\n                            )}\r\n\r\n                        </div>\r\n                    </Row>\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </Layout.Header>\r\n\r\n\r\n            <BackTop>\r\n                <div style={{\r\n                    zIndex: 1000,\r\n                    height: 40,\r\n                    width: 40,\r\n                    lineHeight: '40px',\r\n                    borderRadius: 4,\r\n                    backgroundColor: colorScheme.yellow,\r\n                    color: 'white',\r\n                    textAlign: 'center',\r\n                    fontSize: 20,\r\n                }}><Icon style={{ fontSize: '30px' }} type='arrow-up' /></div>\r\n            </BackTop>\r\n\r\n            {children}\r\n\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","import { Row } from 'antd';\r\nimport React from 'react';\r\n// import { sizeScheme } from '../../assets/constant';\r\n\r\nconst Container = props => {\r\n\r\n    const { deviceWidth, children, style } = props;\r\n\r\n    return (\r\n        <div style={style}>\r\n            <Row justify='space-around'>{children}</Row>\r\n            {/* {deviceWidth && deviceWidth < sizeScheme.lg\r\n                ? <>{children}</>\r\n                : <Row justify='space-around'>{children}</Row>\r\n            } */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Container;\r\n","import { Col, Divider, Skeleton } from 'antd';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { colorScheme, sizeScheme } from '../assets/constant';\r\nimport ChartBarDrawing from '../components/ChartBarDrawing';\r\nimport ChartBarProject from '../components/ChartBarProject';\r\nimport ChartPieDrawing from '../components/ChartPieDrawing';\r\nimport ChartProgress from '../components/ChartProgress';\r\nimport FormPivot from '../components/FormPivot';\r\nimport NavBar from '../components/NavBar';\r\nimport CardPanel from '../components/ui/CardPanel';\r\nimport Container from '../components/ui/Container';\r\n\r\n\r\n\r\nconst PageDashboard = () => {\r\n\r\n    const [deviceWidth, setDeviceWidth] = useState(window.innerWidth);\r\n    useEffect(() => {\r\n        window.addEventListener('resize', () => setDeviceWidth(window.innerWidth));\r\n        return () => window.removeEventListener('resize', () => setDeviceWidth(window.innerWidth));\r\n    }, []);\r\n\r\n\r\n    const [data, setData] = useState([]);\r\n    useEffect(() => {\r\n        axios.post(\r\n            'https://bim.wohhup.com/api/smartsheet/get-sheets-dashboard',\r\n            { listSheetId: [8919906142971780, 4758181617395588] }\r\n        ).then(res => {\r\n            setData(res.data);\r\n            setLoading(false);\r\n        });\r\n    }, []);\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n\r\n\r\n    return (\r\n        <NavBar>\r\n            <div style={{ marginTop: '60px' }}>\r\n                <Container deviceWidth={deviceWidth} style={{ margin: '25px 0 5px 0' }}>\r\n                    <ChartBarProject deviceWidth={deviceWidth} title='No of drawing delay (for construction)' />\r\n                    <ChartBarProject deviceWidth={deviceWidth} title='No of drawing delay (get approval)' />\r\n                    <ChartBarProject deviceWidth={deviceWidth} title='Productivity' />\r\n                </Container>\r\n\r\n\r\n\r\n                {loading\r\n                    ? <SkeletonCard />\r\n                    : (\r\n                        <div style={{ padding: '0 12px' }}>\r\n                            {data && data.reverse().map(project => {\r\n\r\n                                return (\r\n                                    <CardPanel\r\n                                        title={project.name}\r\n                                        key={project.id}\r\n                                        headColor={colorScheme.grey2}\r\n                                        headTitleColor={'white'}\r\n                                    >\r\n                                        <Container style={{ margin: '20px' }}>\r\n                                            <Col style={{ marginBottom: 10 }} xs={24} lg={12} xl={6}>\r\n                                                <TitleInfo titleInfo='Overdue submissions' />\r\n                                                <ChartProgress project={project} />\r\n                                            </Col>\r\n                                            {deviceWidth && deviceWidth <= sizeScheme.lg && <Divider type='horizontal' style={{ padding: '3px 0' }} />}\r\n                                            <Col style={{ marginBottom: 10 }} xs={24} lg={12} xl={6}>\r\n                                                <TitleInfo titleInfo='Approved drawings' />\r\n                                                <ChartPieDrawing project={project} />\r\n                                            </Col>\r\n\r\n                                            {deviceWidth && deviceWidth <= sizeScheme.xl && <Divider type='horizontal' style={{ padding: '3px 0' }} />}\r\n\r\n                                            <Col style={{ marginBottom: 10 }} xs={24} lg={12} xl={6}>\r\n                                                <TitleInfo titleInfo='Drawing counts by revision' />\r\n                                                <ChartBarDrawing project={project} />\r\n                                            </Col>\r\n                                            {deviceWidth && deviceWidth <= sizeScheme.lg && <Divider type='horizontal' style={{ padding: '3px 0' }} />}\r\n                                            <Col style={{ marginBottom: 10 }} xs={24} lg={12} xl={6}>\r\n                                                <TitleInfo titleInfo='Sorted table by category' />\r\n                                                <FormPivot project={project} />\r\n                                            </Col>\r\n                                        </Container>\r\n                                    </CardPanel>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    )}\r\n\r\n            </div>\r\n        </NavBar>\r\n    );\r\n};\r\n\r\n\r\nconst TitleInfo = ({ titleInfo }) => {\r\n    return (\r\n        <div style={{ fontSize: '18px', textAlign: 'center', fontWeight: 'bold' }}>\r\n            {titleInfo}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst SkeletonCard = () => {\r\n    return (\r\n        <div style={{ padding: '0 12px' }}>\r\n            <CardPanel\r\n                title='Project loading ...'\r\n                headColor={colorScheme.grey2}\r\n                headTitleColor={'white'}\r\n            >\r\n                <div style={{ padding: '20px', marginBottom: '95px' }}><Skeleton /><Skeleton /></div>\r\n            </CardPanel>\r\n            <CardPanel\r\n                title='Project loading ...'\r\n                headColor={colorScheme.grey2}\r\n                headTitleColor={'white'}\r\n            >\r\n                <div style={{ padding: '20px', marginBottom: '95px' }}><Skeleton /><Skeleton /></div>\r\n            </CardPanel>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageDashboard;\r\n","\r\nimport { LockOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input } from 'antd';\r\nimport React from 'react';\r\n\r\n\r\n\r\nconst PageLogin = () => {\r\n\r\n   const onHandleSubmit = data => {\r\n      // setLoading(true);\r\n      // axios.post(`http://localhost:5000/users`, data)\r\n      //    .then(res => {\r\n      //       setLoading(false);\r\n      //       message.success('User Added Successfully!');\r\n      //       history.push('/list');\r\n      //    })\r\n      //    .catch(error => {\r\n      //       setLoading(false);\r\n      //       message.error(error);\r\n      //    });\r\n   };\r\n\r\n   // https://medium.com/wesionary-team/how-to-implement-ant-design-with-react-7d21b6e261cc\r\n   return (\r\n      <div>\r\n         <Form\r\n            className='login-form'\r\n            style={{\r\n               width: '500px',\r\n               labelCol: { span: 8 },\r\n               wrapperCol: { span: 16 },\r\n            }}\r\n            onFinish={onHandleSubmit}\r\n         >\r\n\r\n            <Form.Item style={{ textAlign: 'center' }}>\r\n               <img src='/img/logo.png' alt='Woh Hup' />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n               name='Email'\r\n               rules={[\r\n                  { required: true, message: 'Please input your email!' },\r\n                  { type: 'email', message: 'Please input a valid email!' },\r\n               ]}\r\n            >\r\n               <Input\r\n                  size='large'\r\n                  placeholder='Email'\r\n                  prefix={<UserOutlined />}\r\n                  autoComplete='off'\r\n               />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n               name='Password'\r\n               rules={[\r\n                  { required: true, message: 'Please input your password!' },\r\n                  { min: 6, message: 'Password must be minimum 6 characters.' }\r\n               ]}\r\n            >\r\n               <Input.Password\r\n                  size='large'\r\n                  placeholder='Password'\r\n                  prefix={<LockOutlined />}\r\n                  iconRender={visible => ''}\r\n               />\r\n            </Form.Item>\r\n\r\n            <Form.Item style={{ wrapperCol: { offset: 8, span: 16 } }}>\r\n               <Button type='primary' htmlType='submit'>Submit</Button>\r\n            </Form.Item>\r\n\r\n         </Form>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default PageLogin;\r\n","import 'antd/dist/antd.css';\nimport React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport PageDashboard from './layouts/PageDashboard';\nimport PageLogin from './layouts/PageLogin';\n\n\nconst App = () => {\n\n   return (\n      <BrowserRouter>\n         <Switch>\n            <Route path='/' component={PageDashboard} />\n            <Route path='/login' component={PageLogin} />\n         </Switch>\n      </BrowserRouter>\n   );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}